Intern Web Analyst

Q1. Please explain why this code console.log(0.1 + 0.2 == 0.3); outputs false in console?
A2.
Boolean operations usually do not work on floats because of floating point errors. There is the possibility that if the floating point error  is the same for both that it will work as expected, but that is an unreliable behaviour.
Potential solutions to this include converting to integers or accounting for rounding. 
One example of this is:
console.log(Math.abs(0.1 + 0.2 - 0.3) < 1e-14)
This takes the absolute of the equation and then compares that it is less than floating point error and will return the expected behaviour.

Q2. Write a sum function which will work properly when invoked using syntax below:
console.log(sum(2,3)); // Outputs 5 
A2.
function sum(x, y) {
    return x + y
}

Q3. Consider you have code snippet like this:
for (var i = 0; i < 5; i++) {
    var btn = document.createElement('button');
    btn.appendChild(document.createTextNode('Button ' + i));
    btn.addEventListener('click', function(){ console.log(i); });
    document.body.appendChild(btn);
}

What will be the output when user clicks on Button 1 and why?
 Please, suggest a fix to get the expected behavior.
 
A3.
The expected behaviour is that when the button is clicked, the button's number is output to the console.

The fixed code is as follows:

for (var i = 0; i < 5; i++) {
    var btn = document.createElement('button');
    btn.appendChild(document.createTextNode('Button ' + i));
    btn.id = i;
    btn.addEventListener('click', function(event){ console.log(event.target.id); });
    document.body.appendChild(btn);
}

Q4. Write a JavaScript function which extracts all query strings from URL and push them into a JavaScript object named as 'datalayer' as key values.

Example URL: http://www.datalicious.com/?pia.ca=72208039&pie.de=cbartens@datalicious.com&pin.gn=Christian&pin.fn=Bartens&pip.de=&oi.na=&ps.na=&pl.ci=&pl.re=&pl.co=&utm_source=purl&utm_medium=purl&utm_campaign=purl

A4.

function extractDatalayer(urlGiven) {
    // This function extracts the queries from an url given as a string and then puts each query into a datalayer
    // object as a seperate key pair
    // input: urlGiven is url given, format is url?queries
    // returns the datalayer object, with the queries seperated into keypairs.
    
    var datalayer = {}; // No code style was given, so chose literal
    var splitUrl = urlGiven.split("?");
    var keyPairs = splitUrl[splitUrl.length - 1].split("&");
    
    for (var i = 0; i < keyPairs.length; i++) {
        splitPair = keyPairs[i].split("=");
        datalayer[splitPair[0]] = splitPair[1];
    }
    
    return datalayer;
}

Q5. Write a JavaScript function which takes 'datalayer' object from task 4 and convert them in image tag as demonstrated below and append as child to 'body' tag.

Example: <img src="https://example.com/datacollector?pia.ca=72208039&pie.de=cbartens@datalicious.com&pin.gn=Christian&pin.fn=Bartens">


A5. 

function datalayerToImgSrc(datalayer, baseUrl) {
    // This function takes a datalayer object and converts them into a html image tag before appending them 
    // as child to the the body tag of the document
    // input 'datalayer: datalayer object
    // input 'baseUrl': string with the base url for the image queries to be attached.
    // return: false
    
    var imgString = baseUrl + "?"; 
    
    for (var key in datalayer) {
        imgString = imgString + key + "=" + datalayer[key] + "&";
    }
    
    imgString = imgString.substring(0, imgString.length -1);
    
    var imgSrc = document.createElement('img');
    imgSrc.src = imgString;
    document.body.appendChild(imgSrc);
	
	return false;
}

Q6. Write a JavaScript function to store and retrieve the 'datalayer' object from task-4 HTML5 storage.

function datalayerToAndFromStorage(datalayer) {
    // This function is to demonstrate sending an object to storage and retrieving it.
    // input 'datalayer': The datalayer object from the previous tasks
    // return: datalayer object if storage is possible, else false
    
    // To prevent breakage
    if(typeof(Storage) !== "undefined") {
        // Send datalayer to HTML5 Local Storage
        localStorage.setItem('datalayer object', datalayer);
        
        //Retrieving the datalayer
        var retrievedDatalayer = localStorage.getItem('datalayer object');
    
    } else {
        console.log(" No HTML5 Storage support.");
        return false;
    }
    
    return retrievedDatalayer;
}


